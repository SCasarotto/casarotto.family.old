{"ast":null,"code":"import _regeneratorRuntime from\"/Users/stuartcasarotto/Documents/family-website/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/stuartcasarotto/Documents/family-website/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/stuartcasarotto/Documents/family-website/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import firebase from'firebase/app';import'firebase/storage';//Firebase Helpers\nexport var collectionToDataObject=function collectionToDataObject(snapshot){if(!snapshot){return snapshot;}var data={};snapshot.forEach(function(doc){data[doc.id]=doc.data();});return data;};export var collectionToDataArray=function collectionToDataArray(snapshot){if(!snapshot){return snapshot;}var data=[];snapshot.forEach(function(doc){data.push(_objectSpread({uid:doc.id},doc.data()));});return data;};export var docToDataObject=function docToDataObject(doc){if(!(doc&&doc.exists)){return undefined;}return _objectSpread({},doc.data(),{uid:doc.id});};//Make this generalized to accept a list of types ['array', 'object', 'set'] and then replace the use of the other colleciton unwraps\nexport var collectionToDataObjectAndArray=function collectionToDataObjectAndArray(snapshot){if(!snapshot){return snapshot;}var array=[];var object={};snapshot.forEach(function(doc){var data=_objectSpread({},doc.data(),{uid:doc.id});array.push(data);object[doc.id]=data;});return{object:object,array:array};};export var uploadFile=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var file,filePath,fileNumber,fileCount,popupFunctions,showNetworkActivity,hideNetworkActivity;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:file=data.file,filePath=data.filePath,fileNumber=data.fileNumber,fileCount=data.fileCount,popupFunctions=data.popupFunctions;showNetworkActivity=popupFunctions.showNetworkActivity,hideNetworkActivity=popupFunctions.hideNetworkActivity;_context2.prev=2;_context2.next=5;return new Promise(function(res,rej){var name=file.name,type=file.type;var nameParts=name.split('.');var fileEnding=nameParts.pop();var filename=nameParts.join('.');var uploadRef=\"\".concat(filePath,\"/\").concat(filename,\".\").concat(fileEnding);var uploadTask=firebase.storage().ref(uploadRef).put(file,{contentType:file.type});uploadTask.on('state_changed',function(snapshot){var bytesTransferred=snapshot.bytesTransferred,totalBytes=snapshot.totalBytes;var progress=Math.round(bytesTransferred/totalBytes*100);showNetworkActivity(\"Uploading File \".concat(fileNumber&&fileCount?\"\".concat(fileNumber,\" of \").concat(fileCount,\" \"):'',\"(\").concat(progress,\"%)...\"));},function(e){console.log(e);hideNetworkActivity();return rej(e);},/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var downloadURL;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return firebase.storage().ref(uploadRef).getDownloadURL();case 3:downloadURL=_context.sent;return _context.abrupt(\"return\",res({type:type,fileEnding:fileEnding,filename:filename,path:uploadRef,src:downloadURL}));case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);hideNetworkActivity();return _context.abrupt(\"return\",rej('Error Getting File Download URL.'));case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);})));});case 5:return _context2.abrupt(\"return\",_context2.sent);case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](2);console.log(_context2.t0);throw new Error(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[2,8]]);}));return function uploadFile(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/family-website/frontend/src/helpers/firebaseHelper.ts"],"names":["firebase","collectionToDataObject","snapshot","data","forEach","doc","id","collectionToDataArray","push","uid","docToDataObject","exists","undefined","collectionToDataObjectAndArray","array","object","uploadFile","file","filePath","fileNumber","fileCount","popupFunctions","showNetworkActivity","hideNetworkActivity","Promise","res","rej","name","type","nameParts","split","fileEnding","pop","filename","join","uploadRef","uploadTask","storage","ref","put","contentType","on","bytesTransferred","totalBytes","progress","Math","round","e","console","log","getDownloadURL","downloadURL","path","src","Error"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/storage'\nimport { useTEPopupsFunctions } from 'react-tec'\n\n//Firebase Helpers\nexport const collectionToDataObject = (snapshot: firebase.firestore.QuerySnapshot) => {\n\tif (!snapshot) {\n\t\treturn snapshot\n\t}\n\n\tconst data: { [key: string]: any } = {}\n\tsnapshot.forEach((doc) => {\n\t\tdata[doc.id] = doc.data()\n\t})\n\treturn data\n}\nexport const collectionToDataArray = (snapshot: firebase.firestore.QuerySnapshot) => {\n\tif (!snapshot) {\n\t\treturn snapshot\n\t}\n\n\tconst data: any[] = []\n\tsnapshot.forEach((doc) => {\n\t\tdata.push({\n\t\t\tuid: doc.id,\n\t\t\t...doc.data(),\n\t\t})\n\t})\n\treturn data\n}\nexport const docToDataObject = (doc: firebase.firestore.DocumentSnapshot) => {\n\tif (!(doc && doc.exists)) {\n\t\treturn undefined\n\t}\n\n\treturn { ...doc.data(), uid: doc.id } as any\n}\n//Make this generalized to accept a list of types ['array', 'object', 'set'] and then replace the use of the other colleciton unwraps\nexport const collectionToDataObjectAndArray = (snapshot: firebase.firestore.QuerySnapshot) => {\n\tif (!snapshot) {\n\t\treturn snapshot\n\t}\n\n\tconst array: any[] = []\n\tconst object: { [key: string]: any } = {}\n\tsnapshot.forEach((doc) => {\n\t\tconst data = { ...doc.data(), uid: doc.id }\n\t\tarray.push(data)\n\t\tobject[doc.id] = data\n\t})\n\treturn { object, array }\n}\n\ninterface UploadFileData {\n\tfile: File\n\tfilePath: string\n\tfileNumber?: number\n\tfileCount?: number\n\tpopupFunctions: useTEPopupsFunctions\n}\nexport const uploadFile = async (\n\tdata: UploadFileData,\n): Promise<{ type: string; fileEnding: string; filename: string; path: string; src: string }> => {\n\tconst { file, filePath, fileNumber, fileCount, popupFunctions } = data\n\tconst { showNetworkActivity, hideNetworkActivity } = popupFunctions\n\ttry {\n\t\treturn await new Promise((res, rej) => {\n\t\t\tconst { name, type } = file\n\t\t\tconst nameParts = name.split('.')\n\t\t\tconst fileEnding = nameParts.pop()!\n\t\t\tconst filename = nameParts.join('.')\n\n\t\t\tconst uploadRef = `${filePath}/${filename}.${fileEnding}`\n\t\t\tconst uploadTask = firebase\n\t\t\t\t.storage()\n\t\t\t\t.ref(uploadRef)\n\t\t\t\t.put(file, { contentType: file.type })\n\t\t\tuploadTask.on(\n\t\t\t\t'state_changed',\n\t\t\t\t(snapshot) => {\n\t\t\t\t\tconst { bytesTransferred, totalBytes } = snapshot\n\t\t\t\t\tconst progress = Math.round((bytesTransferred / totalBytes) * 100)\n\t\t\t\t\tshowNetworkActivity(\n\t\t\t\t\t\t`Uploading File ${\n\t\t\t\t\t\t\tfileNumber && fileCount ? `${fileNumber} of ${fileCount} ` : ''\n\t\t\t\t\t\t}(${progress}%)...`,\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t(e) => {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t\thideNetworkActivity()\n\t\t\t\t\treturn rej(e)\n\t\t\t\t},\n\t\t\t\tasync () => {\n\t\t\t\t\t//Complete\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst downloadURL = await firebase\n\t\t\t\t\t\t\t.storage()\n\t\t\t\t\t\t\t.ref(uploadRef)\n\t\t\t\t\t\t\t.getDownloadURL()\n\n\t\t\t\t\t\treturn res({\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tfileEnding,\n\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\tpath: uploadRef,\n\t\t\t\t\t\t\tsrc: downloadURL,\n\t\t\t\t\t\t})\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.log(e)\n\t\t\t\t\t\thideNetworkActivity()\n\t\t\t\t\t\treturn rej('Error Getting File Download URL.')\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t)\n\t\t})\n\t} catch (e) {\n\t\tconsole.log(e)\n\t\tthrow new Error(e)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}