{"ast":null,"code":"var _jsxFileName = \"/Users/stuartcasarotto/Documents/family-website/src/pages/admin/RSVPs/EditRSVPPopup/EditRSVPPopup.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { TEPopupForm, TEInputRow, useTEPopups, TEDatetimeRow, TETextareaRow, TESelectRow, TESegmentedGroup } from 'react-tec';\nimport { TEPopupTitle } from 'components';\nimport { saveRSVP } from './requests';\nexport const EditRSVPPopup = props => {\n  var _status$toString;\n\n  const {\n    visible,\n    onClose,\n    onSubmit,\n    editRSVP\n  } = props;\n  const popupFunctions = useTEPopups();\n  const [dateCreated, setDateCreated] = useState();\n  const [name, setName] = useState('');\n  const [foodChoice, setFoodChoice] = useState();\n  const [comment, setComment] = useState('');\n  const [status, setStatus] = useState();\n  useEffect(() => {\n    if (editRSVP) {\n      const {\n        dateCreated,\n        name,\n        foodChoice,\n        comment,\n        status\n      } = editRSVP;\n      setDateCreated(dateCreated ? new Date(dateCreated) : undefined);\n      setName(name);\n      setFoodChoice({\n        label: foodChoice,\n        value: foodChoice\n      });\n      setComment(comment);\n      setStatus(status);\n    } else {\n      setDateCreated(undefined);\n      setName('');\n      setFoodChoice(undefined);\n      setComment('');\n      setStatus(undefined);\n    }\n  }, [editRSVP]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const data = {\n        uid: editRSVP.uid,\n        name,\n        foodChoice: foodChoice === null || foodChoice === void 0 ? void 0 : foodChoice.value,\n        comment,\n        status,\n        popupFunctions\n      };\n      await saveRSVP(data);\n      setDateCreated(undefined);\n      setName('');\n      setFoodChoice(undefined);\n      setComment('');\n      setStatus(undefined);\n      onSubmit();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TEPopupForm, {\n    visible: visible,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    onSubmitTitle: \"Save Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TEPopupTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }, \"Edit Message\"), /*#__PURE__*/React.createElement(TEDatetimeRow, {\n    labelForKey: \"editDateCreated\",\n    title: \"Date Created\",\n    value: dateCreated,\n    onChange: () => {},\n    required: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(TEInputRow, {\n    labelForKey: \"editName\",\n    title: \"Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(TESelectRow, {\n    labelForKey: \"editFoodChoice\",\n    title: \"Food Choice\",\n    value: foodChoice,\n    options: [{\n      label: 'Prime Rib',\n      value: 'Prime Rib'\n    }, {\n      label: 'Chicken',\n      value: 'Chicken'\n    }, {\n      label: 'Fish',\n      value: 'Fish'\n    }, {\n      label: 'Pasta',\n      value: 'Pasta'\n    }, {\n      label: 'Mac and Cheese',\n      value: 'Mac and Cheese'\n    }, {\n      label: 'Other (please leave a comment below)',\n      value: 'other'\n    }],\n    onChange: option => setFoodChoice(option),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(TESegmentedGroup, {\n    labelForKey: \"editStatus\",\n    title: \"Status\",\n    checkedValue: (_status$toString = status === null || status === void 0 ? void 0 : status.toString()) !== null && _status$toString !== void 0 ? _status$toString : '',\n    buttonArray: [{\n      label: 'Submitted',\n      value: '0',\n      key: 'Submitted'\n    }, {\n      label: 'Transferred',\n      value: '1',\n      key: 'Transferred'\n    }],\n    onChange: e => setStatus(parseInt(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(TETextareaRow, {\n    labelForKey: \"editComment\",\n    title: \"Comment\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/family-website/src/pages/admin/RSVPs/EditRSVPPopup/EditRSVPPopup.tsx"],"names":["React","useState","useEffect","TEPopupForm","TEInputRow","useTEPopups","TEDatetimeRow","TETextareaRow","TESelectRow","TESegmentedGroup","TEPopupTitle","saveRSVP","EditRSVPPopup","props","visible","onClose","onSubmit","editRSVP","popupFunctions","dateCreated","setDateCreated","name","setName","foodChoice","setFoodChoice","comment","setComment","status","setStatus","Date","undefined","label","value","handleSubmit","e","preventDefault","data","uid","console","log","target","option","toString","key","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n\tTEPopupForm,\n\tTEInputRow,\n\tuseTEPopups,\n\tTEDatetimeRow,\n\tTETextareaRow,\n\tTESelectRow,\n\tTESegmentedGroup,\n} from 'react-tec'\n\nimport { TEPopupTitle } from 'components'\nimport { RSVP } from 'interfaces'\n\nimport { saveRSVP } from './requests'\n\ninterface Props {\n\tvisible: boolean\n\tonClose(): void\n\tonSubmit(): void\n\teditRSVP?: RSVP\n}\nexport const EditRSVPPopup = (props: Props) => {\n\tconst { visible, onClose, onSubmit, editRSVP } = props\n\n\tconst popupFunctions = useTEPopups()\n\tconst [dateCreated, setDateCreated] = useState<Date>()\n\tconst [name, setName] = useState('')\n\tconst [foodChoice, setFoodChoice] = useState<{ label: string; value: string }>()\n\tconst [comment, setComment] = useState('')\n\tconst [status, setStatus] = useState<number>()\n\n\tuseEffect(() => {\n\t\tif (editRSVP) {\n\t\t\tconst { dateCreated, name, foodChoice, comment, status } = editRSVP\n\n\t\t\tsetDateCreated(dateCreated ? new Date(dateCreated) : undefined)\n\t\t\tsetName(name)\n\t\t\tsetFoodChoice({ label: foodChoice, value: foodChoice })\n\t\t\tsetComment(comment)\n\t\t\tsetStatus(status)\n\t\t} else {\n\t\t\tsetDateCreated(undefined)\n\t\t\tsetName('')\n\t\t\tsetFoodChoice(undefined)\n\t\t\tsetComment('')\n\t\t\tsetStatus(undefined)\n\t\t}\n\t}, [editRSVP])\n\n\tconst handleSubmit = async (e: React.FormEvent<HTMLElement>) => {\n\t\te.preventDefault()\n\t\ttry {\n\t\t\tconst data = {\n\t\t\t\tuid: editRSVP!.uid,\n\t\t\t\tname,\n\t\t\t\tfoodChoice: foodChoice?.value,\n\t\t\t\tcomment,\n\t\t\t\tstatus,\n\t\t\t\tpopupFunctions,\n\t\t\t}\n\n\t\t\tawait saveRSVP(data)\n\t\t\tsetDateCreated(undefined)\n\t\t\tsetName('')\n\t\t\tsetFoodChoice(undefined)\n\t\t\tsetComment('')\n\t\t\tsetStatus(undefined)\n\t\t\tonSubmit()\n\t\t} catch (e) {\n\t\t\tconsole.log(e)\n\t\t}\n\t}\n\n\treturn (\n\t\t<TEPopupForm\n\t\t\tvisible={visible}\n\t\t\tonClose={onClose}\n\t\t\tonSubmit={handleSubmit}\n\t\t\tonSubmitTitle='Save Message'\n\t\t>\n\t\t\t<TEPopupTitle>Edit Message</TEPopupTitle>\n\t\t\t<TEDatetimeRow\n\t\t\t\tlabelForKey='editDateCreated'\n\t\t\t\ttitle='Date Created'\n\t\t\t\tvalue={dateCreated}\n\t\t\t\tonChange={() => {}}\n\t\t\t\trequired\n\t\t\t\tdisabled\n\t\t\t/>\n\t\t\t<TEInputRow\n\t\t\t\tlabelForKey='editName'\n\t\t\t\ttitle='Name'\n\t\t\t\tvalue={name}\n\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<TESelectRow\n\t\t\t\tlabelForKey='editFoodChoice'\n\t\t\t\ttitle='Food Choice'\n\t\t\t\tvalue={foodChoice}\n\t\t\t\toptions={[\n\t\t\t\t\t{ label: 'Prime Rib', value: 'Prime Rib' },\n\t\t\t\t\t{ label: 'Chicken', value: 'Chicken' },\n\t\t\t\t\t{ label: 'Fish', value: 'Fish' },\n\t\t\t\t\t{ label: 'Pasta', value: 'Pasta' },\n\t\t\t\t\t{ label: 'Mac and Cheese', value: 'Mac and Cheese' },\n\t\t\t\t\t{ label: 'Other (please leave a comment below)', value: 'other' },\n\t\t\t\t]}\n\t\t\t\tonChange={(option) =>\n\t\t\t\t\tsetFoodChoice(option as undefined | { value: string; label: string })\n\t\t\t\t}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<TESegmentedGroup\n\t\t\t\tlabelForKey='editStatus'\n\t\t\t\ttitle='Status'\n\t\t\t\tcheckedValue={status?.toString() ?? ''}\n\t\t\t\tbuttonArray={[\n\t\t\t\t\t{ label: 'Submitted', value: '0', key: 'Submitted' },\n\t\t\t\t\t{ label: 'Transferred', value: '1', key: 'Transferred' },\n\t\t\t\t]}\n\t\t\t\tonChange={(e) => setStatus(parseInt(e.target.value))}\n\t\t\t/>\n\t\t\t<TETextareaRow\n\t\t\t\tlabelForKey='editComment'\n\t\t\t\ttitle='Comment'\n\t\t\t\tvalue={comment}\n\t\t\t\tonChange={(e) => setComment(e.target.value)}\n\t\t\t/>\n\t\t</TEPopupForm>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}