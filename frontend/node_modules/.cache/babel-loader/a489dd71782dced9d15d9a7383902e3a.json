{"ast":null,"code":"import { CardElement } from '@stripe/react-stripe-js';\nimport { apiRequest } from 'helpers/apiHelper';\nexport const chargeCard = async data => {\n  const {\n    stripe,\n    elements,\n    amount,\n    firstName,\n    lastName,\n    note,\n    popupFunctions\n  } = data;\n  const {\n    showNetworkActivity,\n    hideNetworkActivity,\n    showAlert\n  } = popupFunctions;\n\n  try {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      showAlert({\n        title: 'Loading Error',\n        message: 'Please try again.'\n      });\n      throw new Error('Please try again.');\n    }\n\n    const card = elements.getElement(CardElement);\n\n    if (!card) {\n      //Show Some Error\n      showAlert({\n        title: 'Card Error',\n        message: 'Please try again.'\n      });\n      throw new Error('Please try again.');\n    }\n\n    showNetworkActivity('Submitting Donation...');\n    const data = {\n      amount: Number(amount),\n      metadata: {\n        'First Name': firstName,\n        'Last Name': lastName,\n        Message: note\n      }\n    };\n    const intentResponse = await apiRequest({\n      method: 'post',\n      path: 'payment_intent',\n      data\n    });\n    const result = await stripe.confirmCardPayment(intentResponse.data.client_secret, {\n      payment_method: {\n        card // billing_details: {\n        // \tname: 'Jenny Rosen',\n        // },\n\n      }\n    });\n\n    if (result.error) {\n      // Show error to your customer (e.g., insufficient funds)\n      console.log(result.error.message);\n      hideNetworkActivity();\n      showAlert({\n        title: 'Error',\n        message: result.error.message\n      });\n      throw new Error(result.error.message);\n    } else {\n      var _result$paymentIntent;\n\n      hideNetworkActivity(); // The payment has been processed!\n\n      if ((result === null || result === void 0 ? void 0 : (_result$paymentIntent = result.paymentIntent) === null || _result$paymentIntent === void 0 ? void 0 : _result$paymentIntent.status) === 'succeeded') {\n        showAlert({\n          title: 'Thank You',\n          message: 'We really apprecaite your donation.'\n        });\n        return;\n      }\n\n      showAlert({\n        title: 'Thank You',\n        message: 'We really apprecaite your donation.'\n      });\n    }\n  } catch (e) {\n    hideNetworkActivity();\n    console.log(e);\n    throw new Error(e);\n  }\n};","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/family-website/frontend/src/pages/front/Registry/request.ts"],"names":["CardElement","apiRequest","chargeCard","data","stripe","elements","amount","firstName","lastName","note","popupFunctions","showNetworkActivity","hideNetworkActivity","showAlert","title","message","Error","card","getElement","Number","metadata","Message","intentResponse","method","path","result","confirmCardPayment","client_secret","payment_method","error","console","log","paymentIntent","status","e"],"mappings":"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","sourcesContent":["import { Stripe, StripeElements } from '@stripe/stripe-js'\nimport { CardElement } from '@stripe/react-stripe-js'\nimport { apiRequest } from 'helpers/apiHelper'\nimport { useTEPopupsFunctions } from 'react-tec'\n\ninterface Data {\n\tstripe: Stripe | null\n\telements: StripeElements | null\n\tamount: string\n\tfirstName: string\n\tlastName: string\n\tnote: string\n\tpopupFunctions: useTEPopupsFunctions\n}\nexport const chargeCard = async (data: Data) => {\n\tconst { stripe, elements, amount, firstName, lastName, note, popupFunctions } = data\n\tconst { showNetworkActivity, hideNetworkActivity, showAlert } = popupFunctions\n\ttry {\n\t\tif (!stripe || !elements) {\n\t\t\t// Stripe.js has not yet loaded.\n\t\t\t// Make sure to disable form submission until Stripe.js has loaded.\n\t\t\tshowAlert({ title: 'Loading Error', message: 'Please try again.' })\n\t\t\tthrow new Error('Please try again.')\n\t\t}\n\t\tconst card = elements.getElement(CardElement)\n\t\tif (!card) {\n\t\t\t//Show Some Error\n\t\t\tshowAlert({ title: 'Card Error', message: 'Please try again.' })\n\t\t\tthrow new Error('Please try again.')\n\t\t}\n\t\tshowNetworkActivity('Submitting Donation...')\n\t\tconst data = {\n\t\t\tamount: Number(amount),\n\t\t\tmetadata: { 'First Name': firstName, 'Last Name': lastName, Message: note },\n\t\t}\n\t\tconst intentResponse = await apiRequest<{ client_secret: string }>({\n\t\t\tmethod: 'post',\n\t\t\tpath: 'payment_intent',\n\t\t\tdata,\n\t\t})\n\n\t\tconst result = await stripe.confirmCardPayment(intentResponse.data.client_secret, {\n\t\t\tpayment_method: {\n\t\t\t\tcard,\n\t\t\t\t// billing_details: {\n\t\t\t\t// \tname: 'Jenny Rosen',\n\t\t\t\t// },\n\t\t\t},\n\t\t})\n\t\tif (result.error) {\n\t\t\t// Show error to your customer (e.g., insufficient funds)\n\t\t\tconsole.log(result.error.message)\n\t\t\thideNetworkActivity()\n\t\t\tshowAlert({ title: 'Error', message: result.error.message })\n\t\t\tthrow new Error(result.error.message)\n\t\t} else {\n\t\t\thideNetworkActivity()\n\t\t\t// The payment has been processed!\n\t\t\tif (result?.paymentIntent?.status === 'succeeded') {\n\t\t\t\tshowAlert({ title: 'Thank You', message: 'We really apprecaite your donation.' })\n\t\t\t\treturn\n\t\t\t}\n\t\t\tshowAlert({ title: 'Thank You', message: 'We really apprecaite your donation.' })\n\t\t}\n\t} catch (e) {\n\t\thideNetworkActivity()\n\t\tconsole.log(e)\n\t\tthrow new Error(e)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}