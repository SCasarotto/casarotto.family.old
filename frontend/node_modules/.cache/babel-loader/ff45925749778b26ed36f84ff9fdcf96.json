{"ast":null,"code":"import React from'react';import ReactTable from'react-table';//TODO: Rewrite for react-table v7. Features to think about:\n// Client Side Pagination\n// Client Side Sort\n// Client Size Search\n// Column Resizing\n// Easy Column / Header styling (right align)\n//\n//Additional thinks to think about adding:\n// Dynamic and locally stored active table column\n//\t- I am thinking this would use some internal hook to store\n//\t\ta list of active columns and would then dynamically\n//\t\tadjust the columns array that comes in.\n//\t- As these are adjusted store the config in local storage\n//\t- Require a unique table name used for the local config\n//\t- Maybe only locally store config if there is a name provided.\n// Ability to reorder coluns\n//\t- This would be manages and stored with the data above.\n//\t\tLikely a stringified array of the active column ids\n//\n// Look for examples to do these things and maybe doucment\n//\tthem here to prepare for the component reqrite\nvar showPagination=function showPagination(dataArray){var defaultPageSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;if(!dataArray||defaultPageSize===1||dataArray.length<=defaultPageSize){return false;}return true;};//TODO: Fix ... actually just rebuild with v7\nexport var TEReactTable=function TEReactTable(props){return/*#__PURE__*/React.createElement(ReactTable,Object.assign({showPagination:showPagination(props.data,props.defaultPageSize)},props));};TEReactTable.defaultProps={defaultPageSize:10};","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/family-website/frontend/src/components/TEReactTable/TEReactTable.tsx"],"names":["React","ReactTable","showPagination","dataArray","defaultPageSize","length","TEReactTable","props","data","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,SAAD,CAA4C,IAAzBC,CAAAA,eAAyB,2DAAP,EAAO,CAClE,GAAI,CAACD,SAAD,EAAcC,eAAe,GAAK,CAAlC,EAAuCD,SAAS,CAACE,MAAV,EAAoBD,eAA/D,CAAgF,CAC/E,MAAO,MAAP,CACA,CAED,MAAO,KAAP,CACA,CAND,CAQA;AACA,MAAO,IAAME,CAAAA,YAA2B,CAAG,QAA9BA,CAAAA,YAA8B,CAACC,KAAD,CAAW,CACrD,mBACC,oBAAC,UAAD,gBAAY,cAAc,CAAEL,cAAc,CAACK,KAAK,CAACC,IAAP,CAAaD,KAAK,CAACH,eAAnB,CAA1C,EAAmFG,KAAnF,EADD,CAGA,CAJM,CAMPD,YAAY,CAACG,YAAb,CAA4B,CAC3BL,eAAe,CAAE,EADU,CAA5B","sourcesContent":["import React from 'react'\nimport ReactTable from 'react-table'\n\n//TODO: Rewrite for react-table v7. Features to think about:\n// Client Side Pagination\n// Client Side Sort\n// Client Size Search\n// Column Resizing\n// Easy Column / Header styling (right align)\n//\n//Additional thinks to think about adding:\n// Dynamic and locally stored active table column\n//\t- I am thinking this would use some internal hook to store\n//\t\ta list of active columns and would then dynamically\n//\t\tadjust the columns array that comes in.\n//\t- As these are adjusted store the config in local storage\n//\t- Require a unique table name used for the local config\n//\t- Maybe only locally store config if there is a name provided.\n// Ability to reorder coluns\n//\t- This would be manages and stored with the data above.\n//\t\tLikely a stringified array of the active column ids\n//\n// Look for examples to do these things and maybe doucment\n//\tthem here to prepare for the component reqrite\n\nconst showPagination = (dataArray: any[], defaultPageSize = 10) => {\n\tif (!dataArray || defaultPageSize === 1 || dataArray.length <= defaultPageSize) {\n\t\treturn false\n\t}\n\n\treturn true\n}\n\n//TODO: Fix ... actually just rebuild with v7\nexport const TEReactTable: React.FC<any> = (props) => {\n\treturn (\n\t\t<ReactTable showPagination={showPagination(props.data, props.defaultPageSize)} {...props} />\n\t)\n}\n\nTEReactTable.defaultProps = {\n\tdefaultPageSize: 10,\n}\n"]},"metadata":{},"sourceType":"module"}