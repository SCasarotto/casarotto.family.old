{"ast":null,"code":"//TODO: Improve\nexport const customTableFilter = (filter, row, column) => {\n  //TODO: Update and write tests\n  const id = filter.pivotId || filter.id;\n  const rowValue = row[id];\n\n  if (rowValue !== null && (typeof rowValue === 'string' || typeof rowValue === 'number')) {\n    return row[id] !== undefined ? String(rowValue).toLowerCase().includes(filter.value.toLowerCase()) : true;\n  }\n\n  return false;\n};\nexport const filterDateColumn = (dateFormatFunction, filter, rows) => {\n  //TODO: Update and write tests\n  const id = filter.pivotId || filter.id;\n  const rowValue = rows[id];\n\n  if (rowValue) {\n    const dateString = dateFormatFunction(rowValue);\n    return dateString.toLowerCase().includes(filter.value.toLowerCase());\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/family-website/src/helpers/tableHelper.ts"],"names":["customTableFilter","filter","row","column","id","pivotId","rowValue","undefined","String","toLowerCase","includes","value","filterDateColumn","dateFormatFunction","rows","dateString"],"mappings":"AAEA;AACA,OAAO,MAAMA,iBAAiB,GAAG,CAACC,MAAD,EAAiBC,GAAjB,EAA2BC,MAA3B,KAAoD;AACpF;AACA,QAAMC,EAAE,GAAGH,MAAM,CAACI,OAAP,IAAkBJ,MAAM,CAACG,EAApC;AACA,QAAME,QAAQ,GAAGJ,GAAG,CAACE,EAAD,CAApB;;AAEA,MAAIE,QAAQ,KAAK,IAAb,KAAsB,OAAOA,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,QAA1E,CAAJ,EAAyF;AACxF,WAAOJ,GAAG,CAACE,EAAD,CAAH,KAAYG,SAAZ,GACJC,MAAM,CAACF,QAAD,CAAN,CACCG,WADD,GAECC,QAFD,CAEUT,MAAM,CAACU,KAAP,CAAaF,WAAb,EAFV,CADI,GAIJ,IAJH;AAKA;;AACD,SAAO,KAAP;AACA,CAbM;AAeP,OAAO,MAAMG,gBAAgB,GAAG,CAC/BC,kBAD+B,EAE/BZ,MAF+B,EAG/Ba,IAH+B,KAI3B;AACJ;AACA,QAAMV,EAAE,GAAGH,MAAM,CAACI,OAAP,IAAkBJ,MAAM,CAACG,EAApC;AACA,QAAME,QAAQ,GAAGQ,IAAI,CAACV,EAAD,CAArB;;AAEA,MAAIE,QAAJ,EAAc;AACb,UAAMS,UAAU,GAAGF,kBAAkB,CAACP,QAAD,CAArC;AACA,WAAOS,UAAU,CAACN,WAAX,GAAyBC,QAAzB,CAAkCT,MAAM,CAACU,KAAP,CAAaF,WAAb,EAAlC,CAAP;AACA;;AACD,SAAO,KAAP;AACA,CAdM","sourcesContent":["import { Filter } from 'react-table-v6'\n\n//TODO: Improve\nexport const customTableFilter = (filter: Filter, row: any, column: any): boolean => {\n\t//TODO: Update and write tests\n\tconst id = filter.pivotId || filter.id\n\tconst rowValue = row[id]\n\n\tif (rowValue !== null && (typeof rowValue === 'string' || typeof rowValue === 'number')) {\n\t\treturn row[id] !== undefined\n\t\t\t? String(rowValue)\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.includes(filter.value.toLowerCase())\n\t\t\t: true\n\t}\n\treturn false\n}\n\nexport const filterDateColumn = (\n\tdateFormatFunction: (value: number | Date | undefined | null) => string,\n\tfilter: any,\n\trows: any[],\n) => {\n\t//TODO: Update and write tests\n\tconst id = filter.pivotId || filter.id\n\tconst rowValue = rows[id]\n\n\tif (rowValue) {\n\t\tconst dateString = dateFormatFunction(rowValue)\n\t\treturn dateString.toLowerCase().includes(filter.value.toLowerCase())\n\t}\n\treturn false\n}\n"]},"metadata":{},"sourceType":"module"}