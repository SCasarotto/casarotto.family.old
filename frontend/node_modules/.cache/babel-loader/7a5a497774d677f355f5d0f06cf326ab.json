{"ast":null,"code":"import validate from 'validate.js';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { docToDataObject } from 'helpers';\nexport const signInUser = async data => {\n  const {\n    email,\n    password,\n    history,\n    popupFunctions\n  } = data;\n  const {\n    showAlert,\n    showNetworkActivity,\n    hideNetworkActivity\n  } = popupFunctions; //Validate Data\n\n  const validatorConstraints = {\n    email: {\n      presence: {\n        allowEmpty: false\n      },\n      email: true\n    },\n    password: {\n      presence: {\n        allowEmpty: false\n      }\n    }\n  };\n  const validationResponse = validate(data, validatorConstraints);\n\n  if (validationResponse) {\n    const valuesArray = Object.values(validationResponse);\n    const firstError = valuesArray[0];\n    const firstErrorMessage = firstError[0];\n    showAlert({\n      title: 'Error',\n      message: firstErrorMessage\n    });\n    return;\n  }\n\n  try {\n    showNetworkActivity('Signing In...');\n    const firebaseAuth = firebase.auth();\n    await firebaseAuth.signInWithEmailAndPassword(email, password); //This could be better\n\n    const {\n      uid\n    } = firebaseAuth.currentUser;\n    const userModelSnapshot = await firebase.firestore().collection('Users').doc(uid).get();\n    const userModel = docToDataObject(userModelSnapshot);\n\n    if (userModel.admin) {\n      hideNetworkActivity();\n      history.push('/admin/rsvps');\n      return;\n    } else {\n      firebase.auth().signOut();\n      hideNetworkActivity();\n      showAlert({\n        title: 'Error Signing In',\n        message: 'This account is missing user permissions.'\n      });\n      return;\n    }\n  } catch (e) {\n    console.log(e);\n    hideNetworkActivity();\n    showAlert({\n      title: 'Error',\n      message: 'Error Signing In'\n    });\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/family-website/src/pages/front/SignIn/requests.ts"],"names":["validate","firebase","docToDataObject","signInUser","data","email","password","history","popupFunctions","showAlert","showNetworkActivity","hideNetworkActivity","validatorConstraints","presence","allowEmpty","validationResponse","valuesArray","Object","values","firstError","firstErrorMessage","title","message","firebaseAuth","auth","signInWithEmailAndPassword","uid","currentUser","userModelSnapshot","firestore","collection","doc","get","userModel","admin","push","signOut","e","console","log"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,SAASC,eAAT,QAAgC,SAAhC;AAUA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAsB;AAC/C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,MAA+CJ,IAArD;AACA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA,mBAAb;AAAkCC,IAAAA;AAAlC,MAA0DH,cAAhE,CAF+C,CAI/C;;AACA,QAAMI,oBAA4C,GAAG;AACpDP,IAAAA,KAAK,EAAE;AACNQ,MAAAA,QAAQ,EAAE;AACTC,QAAAA,UAAU,EAAE;AADH,OADJ;AAINT,MAAAA,KAAK,EAAE;AAJD,KAD6C;AAOpDC,IAAAA,QAAQ,EAAE;AACTO,MAAAA,QAAQ,EAAE;AACTC,QAAAA,UAAU,EAAE;AADH;AADD;AAP0C,GAArD;AAaA,QAAMC,kBAAkB,GAAGf,QAAQ,CAACI,IAAD,EAAOQ,oBAAP,CAAnC;;AACA,MAAIG,kBAAJ,EAAwB;AACvB,UAAMC,WAAoB,GAAGC,MAAM,CAACC,MAAP,CAAcH,kBAAd,CAA7B;AACA,UAAMI,UAAiB,GAAGH,WAAW,CAAC,CAAD,CAArC;AACA,UAAMI,iBAAyB,GAAGD,UAAU,CAAC,CAAD,CAA5C;AACAV,IAAAA,SAAS,CAAC;AACTY,MAAAA,KAAK,EAAE,OADE;AAETC,MAAAA,OAAO,EAAEF;AAFA,KAAD,CAAT;AAIA;AACA;;AAED,MAAI;AACHV,IAAAA,mBAAmB,CAAC,eAAD,CAAnB;AACA,UAAMa,YAAY,GAAGtB,QAAQ,CAACuB,IAAT,EAArB;AACA,UAAMD,YAAY,CAACE,0BAAb,CAAwCpB,KAAxC,EAA+CC,QAA/C,CAAN,CAHG,CAIH;;AACA,UAAM;AAAEoB,MAAAA;AAAF,QAAUH,YAAY,CAACI,WAA7B;AACA,UAAMC,iBAAiB,GAAG,MAAM3B,QAAQ,CACtC4B,SAD8B,GAE9BC,UAF8B,CAEnB,OAFmB,EAG9BC,GAH8B,CAG1BL,GAH0B,EAI9BM,GAJ8B,EAAhC;AAKA,UAAMC,SAAS,GAAG/B,eAAe,CAAC0B,iBAAD,CAAjC;;AACA,QAAIK,SAAS,CAACC,KAAd,EAAqB;AACpBvB,MAAAA,mBAAmB;AACnBJ,MAAAA,OAAO,CAAC4B,IAAR,CAAa,cAAb;AACA;AACA,KAJD,MAIO;AACNlC,MAAAA,QAAQ,CAACuB,IAAT,GAAgBY,OAAhB;AACAzB,MAAAA,mBAAmB;AACnBF,MAAAA,SAAS,CAAC;AACTY,QAAAA,KAAK,EAAE,kBADE;AAETC,QAAAA,OAAO,EAAE;AAFA,OAAD,CAAT;AAIA;AACA;AACD,GAzBD,CAyBE,OAAOe,CAAP,EAAU;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA1B,IAAAA,mBAAmB;AACnBF,IAAAA,SAAS,CAAC;AACTY,MAAAA,KAAK,EAAE,OADE;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAD,CAAT;AAIA;AACA;AACD,CAhEM","sourcesContent":["import validate from 'validate.js'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport { docToDataObject } from 'helpers'\nimport { useTEPopupsFunctions } from 'react-tec'\nimport { RouteComponentProps } from 'react-router'\n\ninterface Data {\n\temail: string\n\tpassword: string\n\thistory: RouteComponentProps['history']\n\tpopupFunctions: useTEPopupsFunctions\n}\nexport const signInUser = async (data: Data) => {\n\tconst { email, password, history, popupFunctions } = data\n\tconst { showAlert, showNetworkActivity, hideNetworkActivity } = popupFunctions\n\n\t//Validate Data\n\tconst validatorConstraints: { [key: string]: any } = {\n\t\temail: {\n\t\t\tpresence: {\n\t\t\t\tallowEmpty: false,\n\t\t\t},\n\t\t\temail: true,\n\t\t},\n\t\tpassword: {\n\t\t\tpresence: {\n\t\t\t\tallowEmpty: false,\n\t\t\t},\n\t\t},\n\t}\n\tconst validationResponse = validate(data, validatorConstraints)\n\tif (validationResponse) {\n\t\tconst valuesArray: any[][] = Object.values(validationResponse)\n\t\tconst firstError: any[] = valuesArray[0]\n\t\tconst firstErrorMessage: string = firstError[0]\n\t\tshowAlert({\n\t\t\ttitle: 'Error',\n\t\t\tmessage: firstErrorMessage,\n\t\t})\n\t\treturn\n\t}\n\n\ttry {\n\t\tshowNetworkActivity('Signing In...')\n\t\tconst firebaseAuth = firebase.auth()\n\t\tawait firebaseAuth.signInWithEmailAndPassword(email, password)\n\t\t//This could be better\n\t\tconst { uid } = firebaseAuth.currentUser!\n\t\tconst userModelSnapshot = await firebase\n\t\t\t.firestore()\n\t\t\t.collection('Users')\n\t\t\t.doc(uid)\n\t\t\t.get()\n\t\tconst userModel = docToDataObject(userModelSnapshot)\n\t\tif (userModel.admin) {\n\t\t\thideNetworkActivity()\n\t\t\thistory.push('/admin/rsvps')\n\t\t\treturn\n\t\t} else {\n\t\t\tfirebase.auth().signOut()\n\t\t\thideNetworkActivity()\n\t\t\tshowAlert({\n\t\t\t\ttitle: 'Error Signing In',\n\t\t\t\tmessage: 'This account is missing user permissions.',\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t} catch (e) {\n\t\tconsole.log(e)\n\t\thideNetworkActivity()\n\t\tshowAlert({\n\t\t\ttitle: 'Error',\n\t\t\tmessage: 'Error Signing In',\n\t\t})\n\t\treturn\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}