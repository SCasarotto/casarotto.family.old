{"ast":null,"code":"import _regeneratorRuntime from\"/Users/stuartcasarotto/Documents/family-website/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/stuartcasarotto/Documents/family-website/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/stuartcasarotto/Documents/family-website/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _asyncToGenerator from\"/Users/stuartcasarotto/Documents/family-website/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{settings}from'config/settings';export var apiRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(apiData){var path,rest,API_BASE_URL,API_DEBUGGING,url,apiConfig,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:path=apiData.path,rest=_objectWithoutProperties(apiData,[\"path\"]);API_BASE_URL=settings.API_BASE_URL,API_DEBUGGING=settings.API_DEBUGGING;url=API_BASE_URL+'/'+path;apiConfig=_objectSpread({url:url},rest);if(API_DEBUGGING){console.log(\"API REQUEST - \".concat(path,\":\"),apiConfig);}_context.next=7;return axios(apiConfig);case 7:response=_context.sent;if(API_DEBUGGING){console.log(\"API RESPONSE - \".concat(path,\":\"),response);}return _context.abrupt(\"return\",response);case 10:case\"end\":return _context.stop();}}},_callee);}));return function apiRequest(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/family-website/frontend/src/helpers/apiHelper.ts"],"names":["axios","settings","apiRequest","apiData","path","rest","API_BASE_URL","API_DEBUGGING","url","apiConfig","console","log","response"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,KAA0C,OAA1C,CAEA,OAASC,QAAT,KAAyB,iBAAzB,CAKA,MAAO,IAAMC,CAAAA,UAAU,0FAAG,iBAAOC,OAAP,kLACjBC,IADiB,CACCD,OADD,CACjBC,IADiB,CACRC,IADQ,0BACCF,OADD,WAEjBG,YAFiB,CAEeL,QAFf,CAEjBK,YAFiB,CAEHC,aAFG,CAEeN,QAFf,CAEHM,aAFG,CAInBC,GAJmB,CAIbF,YAAY,CAAG,GAAf,CAAqBF,IAJR,CAKnBK,SALmB,gBAKLD,GAAG,CAAHA,GALK,EAKGH,IALH,EAMzB,GAAIE,aAAJ,CAAmB,CAClBG,OAAO,CAACC,GAAR,yBAA6BP,IAA7B,MAAsCK,SAAtC,EACA,CARwB,sBASFT,CAAAA,KAAK,CAACS,SAAD,CATH,QASnBG,QATmB,eAUzB,GAAIL,aAAJ,CAAmB,CAClBG,OAAO,CAACC,GAAR,0BAA8BP,IAA9B,MAAuCQ,QAAvC,EACA,CAZwB,gCAalBA,QAbkB,yDAAH,kBAAVV,CAAAA,UAAU,4CAAhB","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios'\n\nimport { settings } from 'config/settings'\n\ninterface ApiRequestData extends AxiosRequestConfig {\n\tpath?: string\n}\nexport const apiRequest = async (apiData: ApiRequestData) => {\n\tconst { path, ...rest } = apiData\n\tconst { API_BASE_URL, API_DEBUGGING } = settings\n\n\tconst url = API_BASE_URL + '/' + path\n\tconst apiConfig = { url, ...rest }\n\tif (API_DEBUGGING) {\n\t\tconsole.log(`API REQUEST - ${path}:`, apiConfig)\n\t}\n\tconst response = await axios(apiConfig)\n\tif (API_DEBUGGING) {\n\t\tconsole.log(`API RESPONSE - ${path}:`, response)\n\t}\n\treturn response\n}\n"]},"metadata":{},"sourceType":"module"}