{"ast":null,"code":"import validate from 'validate.js';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nexport const saveMessage = async data => {\n  const {\n    uid,\n    message,\n    showMessage,\n    popupFunctions\n  } = data;\n  const {\n    showNetworkActivity,\n    hideNetworkActivity,\n    showAlert\n  } = popupFunctions;\n  const validatorConstraints = {\n    message: {\n      presence: {\n        allowEmpty: false\n      }\n    },\n    showMessage: {\n      presence: {\n        allowEmpty: false\n      }\n    }\n  };\n  const validationResponse = validate(data, validatorConstraints);\n\n  if (validationResponse) {\n    const valuesArray = Object.values(validationResponse);\n    const firstError = valuesArray[0];\n    const firstErrorMessage = firstError[0];\n    showAlert({\n      title: 'Error',\n      message: firstErrorMessage\n    });\n    throw new Error(firstErrorMessage);\n  }\n\n  try {\n    showNetworkActivity('Saving Message...');\n    await firebase.firestore().collection('WeddingMessages').doc(uid).update({\n      message,\n      showMessage: showMessage === 'Displayed publicly on the website.'\n    });\n    hideNetworkActivity();\n    showAlert({\n      title: 'Success',\n      message: 'Message saved'\n    });\n    return;\n  } catch (e) {\n    console.log(e);\n    showAlert({\n      title: 'Error',\n      message: 'Error saving message'\n    });\n    throw new Error(e);\n  }\n};","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/family-website/frontend/src/pages/admin/Messages/EditMessagePopup/requests.ts"],"names":["validate","firebase","saveMessage","data","uid","message","showMessage","popupFunctions","showNetworkActivity","hideNetworkActivity","showAlert","validatorConstraints","presence","allowEmpty","validationResponse","valuesArray","Object","values","firstError","firstErrorMessage","title","Error","firestore","collection","doc","update","e","console","log"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AASA,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAP,IAAsB;AAChD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,MAAgDJ,IAAtD;AACA,QAAM;AAAEK,IAAAA,mBAAF;AAAuBC,IAAAA,mBAAvB;AAA4CC,IAAAA;AAA5C,MAA0DH,cAAhE;AAEA,QAAMI,oBAA4C,GAAG;AACpDN,IAAAA,OAAO,EAAE;AACRO,MAAAA,QAAQ,EAAE;AACTC,QAAAA,UAAU,EAAE;AADH;AADF,KAD2C;AAMpDP,IAAAA,WAAW,EAAE;AACZM,MAAAA,QAAQ,EAAE;AACTC,QAAAA,UAAU,EAAE;AADH;AADE;AANuC,GAArD;AAYA,QAAMC,kBAAkB,GAAGd,QAAQ,CAACG,IAAD,EAAOQ,oBAAP,CAAnC;;AACA,MAAIG,kBAAJ,EAAwB;AACvB,UAAMC,WAAoB,GAAGC,MAAM,CAACC,MAAP,CAAcH,kBAAd,CAA7B;AACA,UAAMI,UAAiB,GAAGH,WAAW,CAAC,CAAD,CAArC;AACA,UAAMI,iBAAyB,GAAGD,UAAU,CAAC,CAAD,CAA5C;AACAR,IAAAA,SAAS,CAAC;AACTU,MAAAA,KAAK,EAAE,OADE;AAETf,MAAAA,OAAO,EAAEc;AAFA,KAAD,CAAT;AAIA,UAAM,IAAIE,KAAJ,CAAUF,iBAAV,CAAN;AACA;;AAED,MAAI;AACHX,IAAAA,mBAAmB,CAAC,mBAAD,CAAnB;AACA,UAAMP,QAAQ,CACZqB,SADI,GAEJC,UAFI,CAEO,iBAFP,EAGJC,GAHI,CAGApB,GAHA,EAIJqB,MAJI,CAIG;AACPpB,MAAAA,OADO;AAEPC,MAAAA,WAAW,EAAEA,WAAW,KAAK;AAFtB,KAJH,CAAN;AASAG,IAAAA,mBAAmB;AACnBC,IAAAA,SAAS,CAAC;AACTU,MAAAA,KAAK,EAAE,SADE;AAETf,MAAAA,OAAO,EAAE;AAFA,KAAD,CAAT;AAIA;AACA,GAjBD,CAiBE,OAAOqB,CAAP,EAAU;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAhB,IAAAA,SAAS,CAAC;AACTU,MAAAA,KAAK,EAAE,OADE;AAETf,MAAAA,OAAO,EAAE;AAFA,KAAD,CAAT;AAIA,UAAM,IAAIgB,KAAJ,CAAUK,CAAV,CAAN;AACA;AACD,CArDM","sourcesContent":["import validate from 'validate.js'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { useTEPopupsFunctions } from 'react-tec'\n\ninterface Data {\n\tuid: string\n\tmessage: string\n\tshowMessage: string\n\tpopupFunctions: useTEPopupsFunctions\n}\nexport const saveMessage = async (data: Data) => {\n\tconst { uid, message, showMessage, popupFunctions } = data\n\tconst { showNetworkActivity, hideNetworkActivity, showAlert } = popupFunctions\n\n\tconst validatorConstraints: { [key: string]: any } = {\n\t\tmessage: {\n\t\t\tpresence: {\n\t\t\t\tallowEmpty: false,\n\t\t\t},\n\t\t},\n\t\tshowMessage: {\n\t\t\tpresence: {\n\t\t\t\tallowEmpty: false,\n\t\t\t},\n\t\t},\n\t}\n\tconst validationResponse = validate(data, validatorConstraints)\n\tif (validationResponse) {\n\t\tconst valuesArray: any[][] = Object.values(validationResponse)\n\t\tconst firstError: any[] = valuesArray[0]\n\t\tconst firstErrorMessage: string = firstError[0]\n\t\tshowAlert({\n\t\t\ttitle: 'Error',\n\t\t\tmessage: firstErrorMessage,\n\t\t})\n\t\tthrow new Error(firstErrorMessage)\n\t}\n\n\ttry {\n\t\tshowNetworkActivity('Saving Message...')\n\t\tawait firebase\n\t\t\t.firestore()\n\t\t\t.collection('WeddingMessages')\n\t\t\t.doc(uid)\n\t\t\t.update({\n\t\t\t\tmessage,\n\t\t\t\tshowMessage: showMessage === 'Displayed publicly on the website.',\n\t\t\t})\n\n\t\thideNetworkActivity()\n\t\tshowAlert({\n\t\t\ttitle: 'Success',\n\t\t\tmessage: 'Message saved',\n\t\t})\n\t\treturn\n\t} catch (e) {\n\t\tconsole.log(e)\n\t\tshowAlert({\n\t\t\ttitle: 'Error',\n\t\t\tmessage: 'Error saving message',\n\t\t})\n\t\tthrow new Error(e)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}